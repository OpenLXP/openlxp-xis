<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
version: "3"

services:
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
=======
>>>>>>> 03fa67a (Change to docker-compose.yml for XIS XIA network)
  db_xis:
    image: mysql:5.7
    ports:
      - '3310:3306'
=======
=======
>>>>>>> 68c08d4 (django project set up with docker and same api endpoint)
  db:
    image: mysql:5.7
    ports:
      - '3306:3306'
<<<<<<< HEAD
>>>>>>> 86c1339 (django project set up with docker; sample api endpoint)
=======
>>>>>>> 68c08d4 (django project set up with docker and same api endpoint)
    environment:
      MYSQL_DATABASE: "${DB_NAME}"
#      MYSQL_USER: 'root'
      MYSQL_PASSWORD: "${DB_PASSWORD}"
      MYSQL_ROOT_PASSWORD: "${DB_ROOT_PASSWORD}"
      MYSQL_HOST: ''
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
    networks:
      - openlxp


  app_xis:
    container_name: openlxp-xis-load
=======

  app:
>>>>>>> 86c1339 (django project set up with docker; sample api endpoint)
=======

  app:
>>>>>>> 68c08d4 (django project set up with docker and same api endpoint)
    build:
      context: .
    ports:
      - "8080:8020"
    command: >
      sh -c ". /opt/app/start-app.sh"
    environment:
      DB_NAME: "${DB_NAME}"
      DB_USER: "${DB_USER}"
      DB_PASSWORD: "${DB_PASSWORD}"
      DB_HOST: "${DB_HOST}"
      DJANGO_SUPERUSER_USERNAME: "${DJANGO_SUPERUSER_USERNAME}"
      DJANGO_SUPERUSER_PASSWORD: "${DJANGO_SUPERUSER_PASSWORD}"
      DJANGO_SUPERUSER_EMAIL: "${DJANGO_SUPERUSER_EMAIL}"
      AWS_ACCESS_KEY_ID: "${AWS_ACCESS_KEY_ID}"
      AWS_SECRET_ACCESS_KEY: "${AWS_SECRET_ACCESS_KEY}"
      AWS_DEFAULT_REGION: "${AWS_DEFAULT_REGION}"
      REQUESTS_CA_BUNDLE: '/etc/ssl/certs/ca-certificates.pem'
      AWS_CA_BUNDLE: '/etc/ssl/certs/ca-certificates.pem'
<<<<<<< HEAD
<<<<<<< HEAD
      SECRET_KEY_VAL: "${SECRET_KEY_VAL}"
    volumes:
      - ./app:/opt/app/openlxp-xis
      - ${CERT_VOLUME}:/etc/ssl/certs/ca-certificates.pem
    depends_on:
      - db_xis
    networks: 
      - openlxp

networks: 

  openlxp:
    external: true

=======
=======
>>>>>>> 68c08d4 (django project set up with docker and same api endpoint)
    volumes:
      - ./app:/opt/app/openlxp-xis
    depends_on:
      - db
<<<<<<< HEAD
>>>>>>> 86c1339 (django project set up with docker; sample api endpoint)
=======
>>>>>>> 68c08d4 (django project set up with docker and same api endpoint)
=======
=======
>>>>>>> 82a35a5 (fixed model typos, added connection to xia network)
version: "3"

services:
  db_xis:
    image: mysql:5.7
    ports:
      - '3310:3306'
    environment:
      MYSQL_DATABASE: "${DB_NAME}"
#      MYSQL_USER: 'root'
      MYSQL_PASSWORD: "${DB_PASSWORD}"
      MYSQL_ROOT_PASSWORD: "${DB_ROOT_PASSWORD}"
      MYSQL_HOST: ''
    networks:
      - openlxp
  app_xis:
    container_name: openlxp-xis-load
=======
    networks:
      - openlxp

  app_xis:
>>>>>>> 03fa67a (Change to docker-compose.yml for XIS XIA network)
    build:
      context: .
    ports:
      - "8080:8020"
    command: >
      sh -c ". /opt/app/start-app.sh"
    environment:
      DB_NAME: "${DB_NAME}"
      DB_USER: "${DB_USER}"
      DB_PASSWORD: "${DB_PASSWORD}"
      DB_HOST: "${DB_HOST}"
      DJANGO_SUPERUSER_USERNAME: "${DJANGO_SUPERUSER_USERNAME}"
      DJANGO_SUPERUSER_PASSWORD: "${DJANGO_SUPERUSER_PASSWORD}"
      DJANGO_SUPERUSER_EMAIL: "${DJANGO_SUPERUSER_EMAIL}"
      AWS_ACCESS_KEY_ID: "${AWS_ACCESS_KEY_ID}"
      AWS_SECRET_ACCESS_KEY: "${AWS_SECRET_ACCESS_KEY}"
      AWS_DEFAULT_REGION: "${AWS_DEFAULT_REGION}"
      REQUESTS_CA_BUNDLE: '/etc/ssl/certs/ca-certificates.pem'
      AWS_CA_BUNDLE: '/etc/ssl/certs/ca-certificates.pem'
      SECRET_KEY_VAL: "${SECRET_KEY_VAL}"
    volumes:
      - ./app:/opt/app/openlxp-xis
      - ${CERT_VOLUME}:/etc/ssl/certs/ca-certificates.pem
    depends_on:
<<<<<<< HEAD
<<<<<<< HEAD
      - db
<<<<<<< HEAD
>>>>>>> dcb09cd (Testing Jack's ability to commit changes)
=======
    networks: 
      - openlxp-xia-dau_default
=======
      - db_xis
    networks:
      - openlxp
>>>>>>> d4f8b38 (Adding XIA to XIS metadata_ledger using REST_API.)

networks:
=======
      - db_xis
    networks: 
      - openlxp

networks: 
>>>>>>> 03fa67a (Change to docker-compose.yml for XIS XIA network)
  openlxp:
    external: true
>>>>>>> 82a35a5 (fixed model typos, added connection to xia network)
=======
version: "3"

services:
  db:
    image: mysql:5.7
    ports:
      - '3306:3306'
    environment:
      MYSQL_DATABASE: "${DB_NAME}"
#      MYSQL_USER: 'root'
      MYSQL_PASSWORD: "${DB_PASSWORD}"
      MYSQL_ROOT_PASSWORD: "${DB_ROOT_PASSWORD}"
      MYSQL_HOST: ''

  app:
    build:
      context: .
    ports:
      - "8080:8020"
    command: >
      sh -c ". /opt/app/start-app.sh"
    environment:
      DB_NAME: "${DB_NAME}"
      DB_USER: "${DB_USER}"
      DB_PASSWORD: "${DB_PASSWORD}"
      DB_HOST: "${DB_HOST}"
      DJANGO_SUPERUSER_USERNAME: "${DJANGO_SUPERUSER_USERNAME}"
      DJANGO_SUPERUSER_PASSWORD: "${DJANGO_SUPERUSER_PASSWORD}"
      DJANGO_SUPERUSER_EMAIL: "${DJANGO_SUPERUSER_EMAIL}"
      AWS_ACCESS_KEY_ID: "${AWS_ACCESS_KEY_ID}"
      AWS_SECRET_ACCESS_KEY: "${AWS_SECRET_ACCESS_KEY}"
      AWS_DEFAULT_REGION: "${AWS_DEFAULT_REGION}"
      REQUESTS_CA_BUNDLE: '/etc/ssl/certs/ca-certificates.pem'
      AWS_CA_BUNDLE: '/etc/ssl/certs/ca-certificates.pem'
      SECRET_KEY_VAL: "${SECRET_KEY_VAL}"
    volumes:
      - ./app:/opt/app/openlxp-xis
    depends_on:
      - db
>>>>>>> 01f0bef (Update models.py and serializers.py)
